{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/styles/colors.js","webpack:///./src/styles/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js","webpack:///./src/components/postlist.js","webpack:///./src/utils/format.js"],"names":["RenderPage","_ref","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_postlist__WEBPACK_IMPORTED_MODULE_4__","PageQuery","Projects","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_public_static_d_3972766652_json__WEBPACK_IMPORTED_MODULE_0__","baseHsl","colors","black","text","light","calm","smoke","whiteSmoke","white","link","linkHover","__webpack_exports__","animations","animationCurveFastOutSlowIn","animationCurveLinearOutSlowIn","animationCurveFastOutLinearIn","animationCurveDefault","animationSpeedDefault","animationSpeedFast","animationSpeedSlow","container","style","maxWidth","margin","__webpack_require__","d","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_st_annes__WEBPACK_IMPORTED_MODULE_1__","typography_theme_st_annes__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","stAnnesTheme","scale","ROUTES","projects","about","resume","contact","Nav","props","react__WEBPACK_IMPORTED_MODULE_5___default","_reach_router__WEBPACK_IMPORTED_MODULE_7__","active","location","pathname","split","Object","entries","map","_ref2","key","value","Fragment","gatsby_link__WEBPACK_IMPORTED_MODULE_6___default","className","to","route","isActiveRoute","Layout","children","gatsby__WEBPACK_IMPORTED_MODULE_3__","title","site","siteMetadata","padding","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","css","display","color","styles","lineHeight","paddingBottom","paddingTop","_components_nav__WEBPACK_IMPORTED_MODULE_5__","textAlign","Date","getFullYear","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","gatsby__WEBPACK_IMPORTED_MODULE_1__","_utils_format__WEBPACK_IMPORTED_MODULE_2__","_styles__WEBPACK_IMPORTED_MODULE_3__","PostList","marginLeft","listStyle","post","fields","frontmatter","slug","formatDate","date","exports","toISOString"],"mappings":"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","file":"component---src-pages-projects-js-e7d68eb5b5e5c3406454.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport PostList from '../components/postlist'\n\nconst Projects = () => (\n  <StaticQuery\n  query={PageQuery}\n  render={data => (<Layout><RenderPage data={data}/></Layout>)}\n  />\n)\n\nconst RenderPage =({data}) => {\n  const posts = data.allMarkdownRemark.edges\n  return (\n    <div>\n      <h1>read a post.</h1>\n      <PostList posts={posts} />\n    </div>\n  )\n}\n\nconst PageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: {\n          draft: { ne: true }\n          type: { eq: \"project\" }\n        }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Projects\n","export const baseHsl = `291, 0%, 18%`\n\nexport const colors = {\n  black: `hsla(${baseHsl},1)`,\n  text: `hsla(${baseHsl},0.95)`,\n  light: `hsla(${baseHsl},0.4)`,\n  calm: `hsla(${baseHsl},0.2)`,\n  smoke: `hsla(${baseHsl},0.1)`,\n  whiteSmoke: `hsla(${baseHsl},0.02)`,\n  white: `#fff`,\n  link: `#03a9f4`,\n  linkHover: `#ff5252`,\n}\n","import { style } from \"glamor\"\nimport { colors } from \"./colors\"\n\nconst animations = {\n  animationCurveFastOutSlowIn: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationCurveLinearOutSlowIn: `cubic-bezier(0, 0, 0.2, 1)`,\n  animationCurveFastOutLinearIn: `cubic-bezier(0.4, 0, 1, 1)`,\n  animationCurveDefault: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationSpeedDefault: `250ms`,\n  animationSpeedFast: `200ms`,\n  animationSpeedSlow: `300ms`,\n}\n\nexport default {\n  animations: animations,\n  colors: colors,\n  container: style({\n    maxWidth: `37rem`,\n    margin: `0 auto`,\n  }),\n}\n","import Typography from 'typography'\nimport stAnnesTheme from 'typography-theme-st-annes'\n\nconst typography = new Typography(stAnnesTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport Link from \"gatsby-link\"\nimport { Location } from '@reach/router'\n\nconst ROUTES = {\n  posts: '/',\n  projects: '/projects',\n  about: '/about',\n  resume: '/resume',\n  contact: '/contact',\n}\n\nconst isActiveRoute = (route, active) =>\n  route === active || (active === '' && route === 'posts')\n\n// TODO(etnichols): render a bullet next to active route.\nconst Nav = props => {\n  return (\n    <Location>\n    {({location}) => {\n        let active = location.pathname.split(`/`)[1]\n        return Object.entries(ROUTES).map(([key, value]) => (<>\n        <Link className=\"linkStyle\" to={value}>{`${isActiveRoute(key, active) ? '•' : ''} ${key}`}</Link>\n        <br/>\n        </>))\n      }}\n    </Location>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from \"gatsby-link\"\n\nimport Nav from '../components/nav'\n\nimport './layout.css'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n      return (\n      <>\n        <div style={{\n          padding: rhythm(3 / 4),\n          maxWidth: `40rem`,\n          margin: `0 auto`,\n        }}>\n          <main>\n            <Link to=\"/\" css={{display: `inline-block`,}}>\n            <h1\n              style={{\n                color: styles.colors.light,\n                lineHeight: 1,\n                margin: 0,\n                paddingBottom: rhythm(1/4),\n                paddingTop: rhythm(1/4),\n              }}>\n              {title}\n            </h1></Link>\n            <hr/>\n            <Nav/>\n          {children}\n          </main>\n          <footer>\n            <div style={{ color: styles.colors.text, textAlign: `center`}}>\n              {`© ${new Date().getFullYear()} ${title}`}\n            </div>\n          </footer>\n        </div>\n      </>)\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { formatDate } from '../utils/format'\nimport styles from '../styles'\n\nconst PostList = ({ posts }) => (\n  <ul style={{ marginLeft: 0, listStyle: `none`,}}>\n    {posts.map(post => {\n      const { node } = post\n      const { fields, frontmatter } = node\n      return (\n        <li key={fields.slug}>\n          <span\n            style={{color: styles.colors.light}}\n            className=\"post-date\">\n            {formatDate(frontmatter.date)}\n          </span>\n          <Link to={fields.slug} className=\"link-underline\">\n            {frontmatter.title}\n          </Link>\n        </li>\n      )\n    })}\n  </ul>\n)\n\nexport default PostList\n","/** Formats string in form YYYY-MM-DD. */\nconst formatDate = date => new Date(date).toISOString().split('T')[0]\n\nexports.formatDate = formatDate\n"],"sourceRoot":""}