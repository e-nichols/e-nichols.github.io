{"version":3,"sources":["webpack:///./src/templates/postTemplate.js","webpack:///./src/styles/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/nav.js","webpack:///./src/components/Layout.js"],"names":["PostTemplate","markdownRemark","data","frontmatter","html","tableOfContents","timeToRead","style","marginBottom","rhythm","color","shadow","title","marginTop","paddingTop","display","styles","colors","light","TagsSection","post","dangerouslySetInnerHTML","__html","className","tags","fields","tagSlugs","tagsArray","map","tag","i","divider","length","key","to","fontStyle","textAlign","pageQuery","baseHsl","black","text","calm","smoke","whiteSmoke","white","link","linkHover","animations","animationCurveFastOutSlowIn","animationCurveLinearOutSlowIn","animationCurveFastOutLinearIn","animationCurveDefault","animationSpeedDefault","animationSpeedFast","animationSpeedSlow","container","maxWidth","margin","typography","Typography","baseFontSize","headerColor","bodyColor","baseLineHeight","bodyWeight","boldWeight","headerFontFamily","bodyFontFamily","googleFonts","name","overrideStyles","options","adjustFontSizeTo","scale","a","textDecoration","blockquote","gray","paddingLeft","marginLeft","borderLeft","borderColor","fontWeight","content","MOBILE_MEDIA_QUERY","marginRight","ROUTES","Nav","props","active","location","pathname","split","Object","entries","value","route","isActiveRoute","Layout","children","query","render","site","siteMetadata","css","Date","getFullYear"],"mappings":"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","file":"component---src-templates-post-template-js-5be0a0bd603a3be12fc1.js","sourcesContent":["\nimport React from 'react'\nimport Link from 'gatsby-link'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nexport default function PostTemplate({ data }) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html, tableOfContents, timeToRead } = markdownRemark\n    return (\n      <Layout>\n        <header>\n          <h1 style={{\n            marginBottom: rhythm(1/2),\n            color: frontmatter.shadow}}\n          >\n            {frontmatter.title}\n          </h1>\n          <hr style={{marginBottom: rhythm(1/2)}}/>\n          <p\n            style={{\n              marginTop: 0,\n              paddingTop: 0,\n              display: `block`,\n              color: `${styles.colors.light}`,\n            }}\n          >\n            {`${timeToRead} min read • `}\n            <TagsSection post={markdownRemark} />\n          </p>\n        </header>\n        <div\n          dangerouslySetInnerHTML={{ __html: tableOfContents }}\n          className=\"toc\"\n        />\n        <div dangerouslySetInnerHTML={{ __html: html }} className=\"post\" />\n      </Layout>\n    )\n}\n\nconst TagsSection = ({post}) => {\n  let tags\n  if (post.fields.tagSlugs) {\n    const tagsArray = post.fields.tagSlugs\n    tags = tagsArray.map((tag, i) => {\n      const divider = i < tagsArray.length - 1 && <span>{`, `}</span>\n      return (\n        <span key={tag}>\n          <Link to={tag}>{post.frontmatter.tags[i]}</Link>\n          {divider}\n        </span>\n      )\n    })\n  }\n\n  return (\n    <span style={{ fontStyle: `normal`, textAlign: `left`,}}>\n      tagged {tags}\n    </span>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      tableOfContents\n      fields {\n        tagSlugs\n      }\n      frontmatter {\n        title\n        tags\n        date\n      }\n    }\n  }\n`\n","import { style } from \"glamor\"\n\nconst baseHsl = `291, 0%, 18%`\n\nconst colors = {\n  black: `hsla(${baseHsl},1)`,\n  text: `hsla(${baseHsl},0.95)`,\n  light: `hsla(${baseHsl},0.4)`,\n  calm: `hsla(${baseHsl},0.3)`,\n  smoke: `hsla(${baseHsl},0.2)`,\n  whiteSmoke: `hsla(${baseHsl},0.08)`,\n  white: `#fff`,\n  link: `#03a9f4`,\n  linkHover: `#ff5252`,\n}\n\n\nconst animations = {\n  animationCurveFastOutSlowIn: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationCurveLinearOutSlowIn: `cubic-bezier(0, 0, 0.2, 1)`,\n  animationCurveFastOutLinearIn: `cubic-bezier(0.4, 0, 1, 1)`,\n  animationCurveDefault: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationSpeedDefault: `250ms`,\n  animationSpeedFast: `200ms`,\n  animationSpeedSlow: `300ms`,\n}\n\nexport default {\n  animations: animations,\n  colors: colors,\n  container: style({\n    maxWidth: `37rem`,\n    margin: `0 auto`,\n  }),\n}\n","import Typography from 'typography'\nimport { MOBILE_MEDIA_QUERY } from \"typography-breakpoint-constants\"\nimport gray from \"gray-percentage\"\n\n// Fork of https://github.com/KyleAMathews/typography.js/tree/master/packages/typography-theme-st-annes\nconst typography = new Typography({\n  title: \"St. Evs\",\n  baseFontSize: \"16px\",\n  headerColor: \"hsla(0,0%,0%,1)\",\n  bodyColor: \"hsla(0,0%,0%,0.8)\",\n  baseLineHeight: 1.5625,\n  bodyWeight: 400,\n  boldWeight: 700,\n  headerFontFamily: ['Alegreya', \"serif\"],\n  bodyFontFamily: ['Alegreya Sans', \"sans-serif\"],\n  googleFonts: [\n    {\n      name: 'Alegreya',\n      styles: ['400','700',],\n    },\n    {\n      name: 'Alegreya Sans',\n      styles: ['400', '700',],\n    },\n  ],\n  overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n    a: {\n      color: \"#fb251b\",\n      textDecoration: \"none\",\n    },\n    \"a:hover,a:active\": {\n      color: options.bodyColor,\n    },\n    \"h1,h2,h3,h4,h5,h6\": {\n      marginTop: rhythm(2),\n    },\n    blockquote: {\n      ...scale(1 / 5),\n      color: gray(41),\n      paddingLeft: rhythm(18 / 16),\n      marginLeft: 0,\n      borderLeft: `${rhythm(6 / 16)} solid`,\n      borderColor: \"#fcea0e\",\n    },\n    \"blockquote > :last-child\": {\n      marginBottom: 0,\n    },\n    \"blockquote cite\": {\n      ...adjustFontSizeTo(options.baseFontSize),\n      color: options.bodyColor,\n      fontWeight: options.bodyWeight,\n    },\n    \"blockquote cite:before\": {\n      content: '\"— \"',\n    },\n    [MOBILE_MEDIA_QUERY]: {\n      blockquote: {\n        marginLeft: rhythm(-3 / 4),\n        marginRight: 0,\n        borderLeft: `${rhythm(3 / 16)} solid`,\n        borderColor: \"#fcea0e\",\n        paddingLeft: rhythm(9 / 16),\n      },\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport Link from \"gatsby-link\"\nimport { Location } from '@reach/router'\n\nconst ROUTES = {\n  'posts': '/',\n  'projects': '/projects',\n  'tutorials': '/tutorials',\n  'about': '/about',\n}\n\nconst isActiveRoute = (route, active) =>\n  route === active || (active === '' && route === 'posts')\n\n// TODO(etnichols): render a bullet next to active route.\nconst Nav = props => {\n  return (\n    <Location>\n    {({location}) => {\n        let active = location.pathname.split(`/`)[1]\n        return Object.entries(ROUTES).map(([key, value]) => (<>\n        <Link className=\"link-style\" to={value}>{`${isActiveRoute(key, active) ? '>' : ''} ${key}`}</Link>\n        <br/>\n        </>))\n      }}\n    </Location>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport Nav from '../components/nav'\n\nimport './layout.scss'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n      return (\n        <>\n          <div className=\"container\">\n            <main>\n              <Link to=\"/\" css={{ display: `inline-block` }}>\n                <h1 className=\"site-title\">{title}</h1>\n              </Link>\n              <hr />\n              <Nav />\n              {children}\n            </main>\n            <footer>\n              <div style={{ color: styles.colors.text, textAlign: `center` }}>\n                {`© ${new Date().getFullYear()} ${title}`}\n              </div>\n            </footer>\n          </div>\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}