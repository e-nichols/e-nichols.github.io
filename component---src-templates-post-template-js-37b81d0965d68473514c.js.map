{"version":3,"sources":["webpack:///./src/templates/postTemplate.js","webpack:///./src/styles/colors.js","webpack:///./src/styles/index.js","webpack:///./src/utils/presets.js","webpack:///./src/utils/typography.js","webpack:///./src/components/nav.js","webpack:///./src/utils/format.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","PostTemplate","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_styles__WEBPACK_IMPORTED_MODULE_5__","_utils_typography__WEBPACK_IMPORTED_MODULE_6__","_ref","markdownRemark","data","frontmatter","html","tableOfContents","timeToRead","a","createElement","style","marginBottom","rhythm","color","shadow","title","marginTop","paddingTop","display","styles","colors","light","TagsSection","post","dangerouslySetInnerHTML","__html","className","_ref2","tags","fields","tagSlugs","tagsArray","map","tag","i","divider","length","key","to","fontStyle","textAlign","baseHsl","black","text","calm","smoke","whiteSmoke","white","link","linkHover","animations","animationCurveFastOutSlowIn","animationCurveLinearOutSlowIn","animationCurveFastOutLinearIn","animationCurveDefault","animationSpeedDefault","animationSpeedFast","animationSpeedSlow","container","maxWidth","margin","module","exports","mobile","Mobile","phablet","Phablet","tablet","Tablet","desktop","Desktop","hd","Hd","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_st_annes__WEBPACK_IMPORTED_MODULE_1__","typography_theme_st_annes__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","stAnnesTheme","scale","ROUTES","posts","projects","about","contact","Nav","props","react__WEBPACK_IMPORTED_MODULE_5___default","_reach_router__WEBPACK_IMPORTED_MODULE_9__","active","location","pathname","split","Object","entries","value","Fragment","gatsby_link__WEBPACK_IMPORTED_MODULE_8___default","route","isActiveRoute","formatDate","date","Date","toISOString","Layout","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","site","siteMetadata","padding","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","css","lineHeight","paddingBottom","_components_nav__WEBPACK_IMPORTED_MODULE_5__","getFullYear","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired"],"mappings":"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","file":"component---src-templates-post-template-js-37b81d0965d68473514c.js","sourcesContent":["\nimport React from 'react'\nimport Link from 'gatsby-link'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\n\nimport presets from '../utils/presets'\nimport formatDate from '../utils/format'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nexport default function PostTemplate({ data }) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html, tableOfContents, timeToRead } = markdownRemark\n    return (\n      <Layout>\n        <header>\n          <h1 style={{\n            marginBottom: rhythm(1/2),\n            color: frontmatter.shadow}}\n          >\n            {frontmatter.title}\n          </h1>\n          <hr style={{marginBottom: rhythm(1/2)}}/>\n          <p\n            style={{\n              marginTop: 0,\n              paddingTop: 0,\n              display: `block`,\n              color: `${styles.colors.light}`,\n            }}\n          >\n            {`${timeToRead} min read â€¢ `}\n            <TagsSection post={markdownRemark} />\n          </p>\n        </header>\n        <div\n          dangerouslySetInnerHTML={{ __html: tableOfContents }}\n          className=\"toc\"\n        />\n        <div dangerouslySetInnerHTML={{ __html: html }} className=\"post\" />\n      </Layout>\n    )\n}\n\n// <p\n//         css={{\n//           marginBottom: rhythm(4 / 4),\n//           display: `flex`,\n//           alignItems: `center`,\n//         }}\n//       >\n//         <img\n//           alt={`Avatar of ${post.frontmatter.author.id}`}\n//           src={\n//             post.frontmatter.author.avatar.children[0].responsiveResolution\n//               .src\n//           }\n//           srcSet={\n//             post.frontmatter.author.avatar.children[0].responsiveResolution\n//               .srcSet\n//           }\n//           css={{\n//             borderRadius: `100%`,\n//             float: `left`,\n//             marginRight: rhythm(3 / 4),\n//             marginBottom: 0,\n//           }}\n//         />\n//         <span\n//           css={{\n//             color: styles.colors.light,\n//             ...scale(-1 / 5),\n//           }}\n//         >\n//           <small\n//             css={{\n//               fontWeight: `bold`,\n//               color: styles.colors.text,\n//               textTransform: `uppercase`,\n//             }}\n//           >\n//             {post.frontmatter.author.id}\n//           </small>\n//           {` `}\n//           {post.frontmatter.author.bio}\n//         </span>\n//       </p>\n\nconst TagsSection = ({post}) => {\n  let tags\n  let tagsSection\n  if (post.fields.tagSlugs) {\n    const tagsArray = post.fields.tagSlugs\n    tags = tagsArray.map((tag, i) => {\n      const divider = i < tagsArray.length - 1 && <span>{`, `}</span>\n      return (\n        <span key={tag}>\n          <Link to={tag}>{post.frontmatter.tags[i]}</Link>\n          {divider}\n        </span>\n      )\n    })\n  }\n\n  return (\n    <span style={{ fontStyle: `normal`, textAlign: `left`,}}>\n      tagged {tags}\n    </span>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      tableOfContents\n      fields {\n        tagSlugs\n      }\n      frontmatter {\n        title\n        tags\n        date\n        author {\n          id\n          bio\n        }\n      }\n    }\n  }\n`\n","export const baseHsl = `291, 0%, 18%`\n\nexport const colors = {\n  black: `hsla(${baseHsl},1)`,\n  text: `hsla(${baseHsl},0.95)`,\n  light: `hsla(${baseHsl},0.4)`,\n  calm: `hsla(${baseHsl},0.2)`,\n  smoke: `hsla(${baseHsl},0.1)`,\n  whiteSmoke: `hsla(${baseHsl},0.02)`,\n  white: `#fff`,\n  link: `#03a9f4`,\n  linkHover: `#ff5252`,\n}\n","import { style } from \"glamor\"\nimport { colors } from \"./colors\"\nimport presets from \"../utils/presets\"\n\nconst animations = {\n  animationCurveFastOutSlowIn: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationCurveLinearOutSlowIn: `cubic-bezier(0, 0, 0.2, 1)`,\n  animationCurveFastOutLinearIn: `cubic-bezier(0.4, 0, 1, 1)`,\n  animationCurveDefault: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationSpeedDefault: `250ms`,\n  animationSpeedFast: `200ms`,\n  animationSpeedSlow: `300ms`,\n}\n\nexport default {\n  animations: animations,\n  colors: colors,\n  container: style({\n    maxWidth: `37rem`,\n    margin: `0 auto`,\n  }),\n}\n","module.exports = {\n  mobile: `(min-width: 400px)`,\n  Mobile: `@media (min-width: 400px)`,\n  phablet: `(min-width: 550px)`,\n  Phablet: `@media (min-width: 550px)`,\n  tablet: `(min-width: 750px)`,\n  Tablet: `@media (min-width: 750px)`,\n  desktop: `(min-width: 1000px)`,\n  Desktop: `@media (min-width: 1000px)`,\n  hd: `(min-width: 1200px)`,\n  Hd: `@media (min-width: 1200px)`,\n}\n","import Typography from 'typography'\nimport stAnnesTheme from 'typography-theme-st-annes'\n\nconst typography = new Typography(stAnnesTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from \"gatsby-link\"\nimport { Location } from '@reach/router'\n\nconst ROUTES = {\n  posts: '/',\n  projects: '/projects',\n  about: '/about',\n  contact: '/contact'\n}\n\nconst isActiveRoute = (route, active) =>\n  route === active || (active === '' && route === 'posts')\n\n// TODO(etnichols): render a bullet next to active route.\nconst Nav = props => {\n  return (\n    <Location>\n    {({location}) => {\n        let active = location.pathname.split(`/`)[1]\n        return Object.entries(ROUTES).map(([key, value]) => (<>\n        <Link className=\"linkStyle\" to={value}>{`${isActiveRoute(key, active) ? 'â€¢' : ''} ${key}`}</Link>\n        <br/>\n        </>))\n      }}\n    </Location>\n  )\n}\n\nexport default Nav\n","/** Formats string in form YYYY-MM-DD. */\nconst formatDate = date => new Date(date).toISOString().split('T')[0]\n\nexports.formatDate = formatDate\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from \"gatsby-link\"\n\nimport Nav from '../components/nav'\n\nimport './layout.css'\nimport styles from '../styles'\nimport { rhythm, scale } from '../utils/typography'\n\nconst NAV_LINKS = {\n  posts: '/',\n  projects: '/projects',\n  about: '/about',\n  contact: '/contact'\n}\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n      return (\n      <>\n        <div style={{\n          padding: rhythm(3 / 4),\n          maxWidth: `37rem`,\n          margin: `0 auto`,\n        }}>\n          <main>\n            <Link to=\"/\" css={{display: `inline-block`,}}>\n            <h1\n              style={{\n                color: styles.colors.light,\n                lineHeight: 1,\n                margin: 0,\n                paddingBottom: rhythm(1/4),\n                paddingTop: rhythm(1/4),\n              }}>\n              {title}\n            </h1></Link>\n            <hr/>\n            <Nav/>\n          {children}\n          </main>\n          <footer>\n            <div style={{ color: styles.colors.light, textAlign: `center`}}>\n              {`Â© ${new Date().getFullYear()} ${title}`}\n            </div>\n          </footer>\n        </div>\n      </>)\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}