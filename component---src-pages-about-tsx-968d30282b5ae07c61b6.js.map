{"version":3,"sources":["webpack:///./src/components/icon.tsx","webpack:///./src/data/resume.ts","webpack:///./src/pages/about.tsx","webpack:///./src/components/layout.js"],"names":["makeIcon","viewboxWidth","viewboxHeight","content","className","xmlns","width","height","viewBox","Icon","name","d","data","sections","title","entries","company","duration","start","end","description","link","RenderResume","map","section","key","ResumeTitle","query","render","site","siteMetadata","email","github","linkedin","medium","iconsWithLinks","i","icon","href","RenderSection","entry","RenderEntry","header","body","Array","isArray","item","Page","Layout","children","to","css","display","style","fontSize","color","styles","colors","text","textAlign","Date","getFullYear"],"mappings":"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","file":"component---src-pages-about-tsx-968d30282b5ae07c61b6.js","sourcesContent":["import React from 'react'\n\nimport './icon.scss'\n\nconst Icon: FC<{ name: string }> = ({ name, viewboxWidth, viewboxHeight }) => {\n  switch (name) {\n    case 'github':\n      return makeIcon(\n        24,\n        24,\n        <>\n          <title>GitHub icon</title>\n          <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\" />\n        </>\n      )\n    case 'linkedin':\n      return makeIcon(\n        24,\n        24,\n        <>\n          <title>LinkedIn icon</title>\n          <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\" />\n        </>\n      )\n    case 'email':\n      return makeIcon(\n        24,\n        24,\n        <path d=\"M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z\" />\n      )\n    case 'medium':\n      return makeIcon(\n        24,\n        24,\n        <>\n          <title>Medium icon</title>\n          <path d=\"M0 0v24h24V0H0zm19.938 5.686L18.651 6.92a.376.376 0 0 0-.143.362v9.067a.376.376 0 0 0 .143.361l1.257 1.234v.271h-6.322v-.27l1.302-1.265c.128-.128.128-.165.128-.36V8.99l-3.62 9.195h-.49L6.69 8.99v6.163a.85.85 0 0 0 .233.707l1.694 2.054v.271H3.815v-.27L5.51 15.86a.82.82 0 0 0 .218-.707V8.027a.624.624 0 0 0-.203-.527L4.019 5.686v-.27h4.674l3.613 7.923 3.176-7.924h4.456v.271z\" />\n        </>\n      )\n    default:\n      return makeIcon(\n        512,\n        512,\n        <>\n          <title>Icon</title>\n          <path d=\"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\" />\n        </>\n      )\n  }\n}\n\nconst makeIcon = (\n  viewboxWidth: string,\n  viewboxHeight: string,\n  content: React.Fragment\n): any => {\n  return (\n    <svg\n      className=\"icon\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox={`0 0 ${viewboxWidth} ${viewboxHeight}`}\n    >\n      {content}\n    </svg>\n  )\n}\n\nexport default Icon\n","import { Resume } from '../@types/resume.d.ts'\n\nconst data: Resume = {\n  sections: [\n    {\n      title: 'work',\n      entries: [\n        {\n          title: 'Software Engineer',\n          company: 'Google',\n          duration: {\n            start: 'September 2017',\n            end: 'Present',\n          },\n          description:\n            'Fullstack development work on Course Kit, a set of free tools that integrate with existing learning management systems (LMS) to help university professors create, collect and review coursework using Google Apps.',\n        },\n        {\n          title: 'Engineering Resident',\n          company: 'Google',\n          duration: {\n            start: 'July 2018',\n            end: 'July 2019',\n          },\n          description:\n            'Completed one-year new program for recent CS/CoE grads aimed at rapidly developing software at scale. Projects included design and implementation of an algorithm for detecting outdated content produced from an NLG system (C++) and and an asynchornous longform audio transcription system using the Google Speech API.',\n        },\n        {\n          title: 'RightSite',\n          link: 'https://apple.co/2Uu5tUT',\n          company: 'University of Kansas Medical Center',\n          duration: {\n            start: 'October 2016',\n            end: 'May 2017',\n          },\n          description:\n            'Developed a React Native iOS application which allows users to interact with 38 different interactive SVGs of the human body, with the goal of improving biopsy labeling accuracy in a laboratory setting.',\n        },\n        {\n          title: 'Well Query Dashboard',\n          company: 'Astra Analytics',\n          duration: {\n            start: 'September 2016',\n            end: 'February 2017',\n          },\n          description:\n            'Created a map-based web application for searching well records by location and 30 different drilling metrics using React, Redux, Node.js/Express and MySQL.',\n        },\n      ],\n    },\n    {\n      title: 'education',\n      entries: [\n        {\n          company: 'B.S., Computer Science',\n          title: 'University of Kansas',\n          duration: {\n            start: 'Aug 2012',\n            end: 'May 2017',\n          },\n        },\n      ],\n    },\n    {\n      title: 'languages/software',\n      entries: [\n        {\n          description: [\n            'Javascript (React, Redux, React Native, Node.js)',\n            'Typescript',\n            'Java',\n            'GraphQL (Gatsby, Prisma)',\n            'Google App Engine, AWS',\n            'HTML/CSS',\n            'InDesign, Photoshop, Sketch',\n          ],\n        },\n      ],\n    },\n    {\n      title: 'projects',\n      entries: [\n        {\n          title: 'overturemusical.com',\n          link: 'http://overturemusical.com',\n          duration: {\n            start: 'March 2019',\n            end: 'Present',\n          },\n          description:\n            'Marketing website for Overture - an original symphony about the Kansas City Philharmonic Orchestra during the 1953-1954 season.',\n        },\n        {\n          title: 'nycmaps.surge.sh',\n          link: 'https://nyc-maps.surge.sh',\n          duration: {\n            start: 'November 2017',\n            end: 'January 2018',\n          },\n          description:\n            \"Interactive maps of Manhattan's neighborhoods and the five boroughs. Created with Illustrator, React and D3. Note: Manhattan kind of looks like a hambone.\",\n        },\n        {\n          title: 'Digital Bookshelf',\n          link: 'https://github.com/e-nichols/digital-bookshelf',\n          duration: {\n            start: 'August 2018',\n            end: 'February 2019',\n          },\n          description:\n            'A bare-bones GoodReads clone using React Native, Prisma and Node.js.',\n        },\n      ],\n    },\n  ],\n}\n\nexport default data\n","import { graphql, StaticQuery } from 'gatsby'\nimport React, { FC } from 'react'\nimport Icon from '../components/icon'\nimport Layout from '../components/layout'\n\nimport { Duration, Entry, Resume, Section } from '../@types/resume.d.ts'\nimport data from '../data/resume'\nimport './about.scss'\n\nconst Page: FC<> = () => {\n  return (\n    <Layout>\n      <RenderResume {...data} />\n    </Layout>\n  )\n}\n\nconst RenderResume: FC<Resume> = ({ sections }) => {\n  return (\n    <>\n      <ResumeTitle />\n      <div className=\"resume-body\">\n        {sections.map(section => (\n          <RenderSection key={`section-${section.title}`} {...section} />\n        ))}\n      </div>\n    </>\n  )\n}\n\nconst ResumeTitle: FC<> = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              description\n              email\n              linkedin\n              github\n              medium\n            }\n          }\n        }\n      `}\n      render={data => {\n        const {\n          email,\n          github,\n          linkedin,\n          medium,\n          description,\n        } = data.site.siteMetadata\n\n        const iconsWithLinks = [\n          ['email', `mailto:${email}`],\n          ['github', github],\n          ['linkedin', linkedin],\n          ['medium', medium],\n        ]\n\n        return (\n          <div>\n            <h2>about me</h2>\n            <p className=\"title-section-description\">{description}</p>\n            <div className=\"icon-section\">\n              {iconsWithLinks.map(([icon, href], i) => (\n                <a key={`link-${i}`} className=\"link-icon\" href={href}>\n                  <Icon key={`link-${i}`} name={icon} />\n                </a>\n              ))}\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\n/** Renders a section, a titled list of entries. */\nconst RenderSection: FC<Section> = ({ title, entries }) => {\n  return (\n    <section className=\"section\">\n      <div className=\"section-title-container\">\n        <h2 className=\"section-title\">{title}</h2>\n        <div className=\"section-bar\" />\n      </div>\n      {entries.map((entry, i) => (\n        <RenderEntry key={`${title}-entry-${i}`} {...entry} />\n      ))}\n    </section>\n  )\n}\n\n/** A single entry, either a job entry or a list of skills. */\nconst RenderEntry: FC<Entry> = ({\n  title,\n  link,\n  company,\n  duration,\n  description,\n}) => {\n  const header = (\n    <>\n      {title && (\n        <h4 className=\"entry-title\">\n          {link ? <a href={link}>{title}</a> : title}\n        </h4>\n      )}\n      {company && <h5 className=\"entry-company\">{company}</h5>}\n      {duration && (\n        <div className=\"entry-duration\">{`${duration.start} - ${\n          duration.end\n        }`}</div>\n      )}\n    </>\n  )\n\n  const body = Array.isArray(description) ? (\n    <ul className=\"languages\">\n      {description.map((item, i) => (\n        <li key={`languages-${item}-${i}`}>{item}</li>\n      ))}\n    </ul>\n  ) : (\n    description\n  )\n\n  return (\n    <div className=\"entry\">\n      {header}\n      <div className=\"entry-description\">{body}</div>\n    </div>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport Nav from '../components/nav'\n\nimport './layout.scss'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n      return (\n        <>\n          <div className=\"container\">\n            <main>\n              <Link to=\"/\" css={{ display: `inline-block` }}>\n                <h1 className=\"site-title\">{title}</h1>\n              </Link>\n              <hr />\n              <Nav />\n              {children}\n            </main>\n            <footer>\n              <div\n                style={{\n                  fontSize: '18px',\n                  color: styles.colors.text,\n                  textAlign: `center`,\n                }}\n              >\n                {`© ${new Date().getFullYear()} ${title}`}\n              </div>\n            </footer>\n          </div>\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}