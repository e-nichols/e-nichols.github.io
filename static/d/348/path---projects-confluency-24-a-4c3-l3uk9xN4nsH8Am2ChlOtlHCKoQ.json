{"data":{"markdownRemark":{"html":"<p>Created as part of Cerner's 2016 Hackfest, Confluency is an Ionic application that tracks children's vocabulary development over time. I had the idea for this application after watching Deb Roy's TED Talk, which I reviewed in an earlier post. The original idea was to use a speech-to-text API to record conversations with children, create a wordbank, and provide insights into language development. Our target audience would be parents and caretakers working with patients suffering recovering from strokes or head trauma.</p>\n<p>I teamed up with three other KU undergrads to tackle the project. We used the <a href=\"http://ionicframework.com/\">Ionic Framework</a> to create the app, in part because of the kick-ass <a href=\"http://ionic.io/products/creator\">Ionic Creator</a> product they offer, which allows for drag and drop prototyping.</p>\n<p><img src=\"teampic.png\"></p>\n<p>The initial goal was to use IBM's <a href=\"http://www.ibm.com/watson/developercloud/speech-to-text.html\">Speech to Text API</a> to handle translating audio clips into our \"wordbank\" JSONs. If you <a href=\"https://speech-to-text-demo.mybluemix.net/\">take their demo out for a spin</a>, you'll see just how perfect the JSONs produced match our needs. Each JSON contains a transcript containing the translation of the highest ranked translations, and also includes a list of word alternatives and their confidence ratings when it fails to find a 100 percent match. The JSON below illustrates:</p>\n<pre><code class=\"language-javascript\">{\n  \"results\": [\n    {\n      \"word_alternatives\": [\n        {\n          \"start_time\": 0.95,\n          \"alternatives\": [\n            {\n              \"confidence\": 0.7399,\n              \"word\": \"what\"\n            },\n            {\n              \"confidence\": 0.26,\n              \"word\": \"what's\"\n            }\n          ],\n          \"end_time\": 1.39\n        },\n        {\n          \"start_time\": 1.43,\n          \"alternatives\": [\n            {\n              \"confidence\": 1,\n              \"word\": \"a\"\n            }\n          ],\n          \"end_time\": 1.59\n        },\n        {\n          \"start_time\": 1.59,\n          \"alternatives\": [\n            {\n              \"confidence\": 1,\n              \"word\": \"beautiful\"\n            }\n          ],\n          \"end_time\": 2.54\n        },\n        {\n          \"start_time\": 2.57,\n          \"alternatives\": [\n            {\n              \"confidence\": 0.9998,\n              \"word\": \"day\"\n            }\n          ],\n          \"end_time\": 3.09\n        },\n        {\n          \"start_time\": 3.17,\n          \"alternatives\": [\n            {\n              \"confidence\": 0.9816,\n              \"word\": \"outside\"\n            },\n            {\n              \"confidence\": 0.0184,\n              \"word\": \"side\"\n            }\n          ],\n          \"end_time\": 4.1\n        }\n      ],\n          \"confidence\": 0.842,\n          \"transcript\": \"what a beautiful day outside \",\n          \"timestamps\": [\n            [\n              \"what\",\n              0.95,\n              1.39\n            ],\n            [\n              \"a\",\n              1.43,\n              1.59\n            ],\n            [\n              \"beautiful\",\n              1.59,\n              2.54\n            ],\n            [\n              \"day\",\n              2.57,\n              3.09\n            ],\n            [\n              \"outside\",\n              3.17,\n              4.1\n            ]\n          ]\n        },\n        {\n          \"transcript\": \"what's a beautiful day outside \"\n        },\n        {\n          \"transcript\": \"what a beautiful day out side \"\n        }\n      ],\n      \"final\": true\n    }\n  ],\n  \"result_index\": 0\n}\n</code></pre>\n<p>Confession: I failed to get the API working for the app. I could not figure out how to properly format the XMLHttpRequests. Since our application did not have a built-out backend, I had to make the API calls client-side which is a much bigger hassle than using <a href=\"https://github.com/watson-developer-cloud/speech-to-text-nodejs\">the service with nodejs</a>. I first ran into CORS (Cross-Origin-Resource-Sharing) issues trying to make the call from localhost. Thankfully, <a href=\"http://blog.ionic.io/handling-cors-issues-in-ionic/\">Ionic has a page dedicated to these issues</a>, and I was able to get a proxy set up to make the calls. But even with the proxy, I still continued to run into authentication issues, evening using specific credentials from IBM Bluemix.</p>\n<p>I plan migrating the app over to node after my internship finishes up, using <a href=\"https://www.raymondcamden.com/2015/08/05/a-real-world-app-with-ibm-bluemix-node-cordova-and-ionic/\">this awesome tutorial</a> as a jumping off point. I'm convinced my previous issues were due to my inability to read documentation. I think the app has some true potential and I look forward to developing it further.</p>","timeToRead":2,"tableOfContents":"","fields":{"tagSlugs":["/tags/speech/","/tags/mobile-application/"]},"frontmatter":{"title":"Confluency - Cerner Hackfest 2016","tags":["speech","mobile application"],"date":"2016-05-06T00:12:03.000Z","author":{"id":"Evan Nichols","bio":"I'm a software engineer in NYC who likes React, Node, GraphQL and other cool web technologies. I also like running and dogs."}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/projects/confluency/"}}