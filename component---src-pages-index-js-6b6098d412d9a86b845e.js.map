{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/styles/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js","webpack:///./src/components/postlist.js","webpack:///./src/utils/format.js"],"names":["RenderPage","_ref","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_postlist__WEBPACK_IMPORTED_MODULE_4__","PageQuery","Index","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","render","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_public_static_d_1762760365_json__WEBPACK_IMPORTED_MODULE_0__","glamor__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","baseHsl","colors","black","text","light","calm","smoke","whiteSmoke","white","link","linkHover","__webpack_exports__","animations","animationCurveFastOutSlowIn","animationCurveLinearOutSlowIn","animationCurveFastOutLinearIn","animationCurveDefault","animationSpeedDefault","animationSpeedFast","animationSpeedSlow","container","style","maxWidth","margin","typography","Typography","title","baseFontSize","headerColor","bodyColor","baseLineHeight","bodyWeight","boldWeight","headerFontFamily","bodyFontFamily","googleFonts","name","styles","overrideStyles","options","_ref2","adjustFontSizeTo","scale","rhythm","color","textDecoration","a:hover,a:active","h1,h2,h3,h4,h5,h6","marginTop","blockquote","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","gray","paddingLeft","marginLeft","borderLeft","borderColor","blockquote > :last-child","marginBottom","blockquote cite","fontWeight","blockquote cite:before","content","MOBILE_MEDIA_QUERY","marginRight","ROUTES","projects","tutorials","about","Nav","props","react__WEBPACK_IMPORTED_MODULE_5___default","_reach_router__WEBPACK_IMPORTED_MODULE_7__","active","location","pathname","split","Object","entries","map","key","value","Fragment","gatsby_link__WEBPACK_IMPORTED_MODULE_6___default","className","to","route","isActiveRoute","Layout","children","gatsby__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","css","display","_components_nav__WEBPACK_IMPORTED_MODULE_5__","textAlign","Date","getFullYear","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_utils_format__WEBPACK_IMPORTED_MODULE_2__","_styles__WEBPACK_IMPORTED_MODULE_3__","PostList","listStyle","post","fields","excerpt","frontmatter","slug","formatDate","date","exports","toISOString"],"mappings":"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","file":"component---src-pages-index-js-6b6098d412d9a86b845e.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport PostList from '../components/postlist'\n\nimport './index.css'\n\n/** Renders list of all posts. */\nconst Index = () => (\n  <StaticQuery\n  query={PageQuery}\n  render={data => (<Layout><RenderPage data={data}/></Layout>)}\n  />)\n\nconst RenderPage = ({data}) => {\n  const posts = data.allMarkdownRemark.edges\n  return(\n    <div>\n      <h1>read a post</h1>\n      <PostList posts={posts} />\n    </div>\n  )\n}\n\nconst PageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        frontmatter: {\n          draft: { ne: true }\n          type: { eq: \"post\" }\n       }\n     }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Index\n","import { style } from \"glamor\"\n\nconst baseHsl = `291, 0%, 18%`\n\nconst colors = {\n  black: `hsla(${baseHsl},1)`,\n  text: `hsla(${baseHsl},0.95)`,\n  light: `hsla(${baseHsl},0.4)`,\n  calm: `hsla(${baseHsl},0.3)`,\n  smoke: `hsla(${baseHsl},0.2)`,\n  whiteSmoke: `hsla(${baseHsl},0.08)`,\n  white: `#fff`,\n  link: `#03a9f4`,\n  linkHover: `#ff5252`,\n}\n\n\nconst animations = {\n  animationCurveFastOutSlowIn: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationCurveLinearOutSlowIn: `cubic-bezier(0, 0, 0.2, 1)`,\n  animationCurveFastOutLinearIn: `cubic-bezier(0.4, 0, 1, 1)`,\n  animationCurveDefault: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationSpeedDefault: `250ms`,\n  animationSpeedFast: `200ms`,\n  animationSpeedSlow: `300ms`,\n}\n\nexport default {\n  animations: animations,\n  colors: colors,\n  container: style({\n    maxWidth: `37rem`,\n    margin: `0 auto`,\n  }),\n}\n","import Typography from 'typography'\nimport { MOBILE_MEDIA_QUERY } from \"typography-breakpoint-constants\"\nimport gray from \"gray-percentage\"\n\n// Fork of https://github.com/KyleAMathews/typography.js/tree/master/packages/typography-theme-st-annes\nconst typography = new Typography({\n  title: \"St. Evs\",\n  baseFontSize: \"16px\",\n  headerColor: \"hsla(0,0%,0%,1)\",\n  bodyColor: \"hsla(0,0%,0%,0.8)\",\n  baseLineHeight: 1.5625,\n  bodyWeight: 400,\n  boldWeight: 700,\n  headerFontFamily: ['Alegreya', \"serif\"],\n  bodyFontFamily: ['Alegreya Sans', \"sans-serif\"],\n  googleFonts: [\n    {\n      name: 'Alegreya',\n      styles: ['400','700',],\n    },\n    {\n      name: 'Alegreya Sans',\n      styles: ['400', '700',],\n    },\n  ],\n  overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n    a: {\n      color: \"#fb251b\",\n      textDecoration: \"none\",\n    },\n    \"a:hover,a:active\": {\n      color: options.bodyColor,\n    },\n    \"h1,h2,h3,h4,h5,h6\": {\n      marginTop: rhythm(2),\n    },\n    blockquote: {\n      ...scale(1 / 5),\n      color: gray(41),\n      paddingLeft: rhythm(18 / 16),\n      marginLeft: 0,\n      borderLeft: `${rhythm(6 / 16)} solid`,\n      borderColor: \"#fcea0e\",\n    },\n    \"blockquote > :last-child\": {\n      marginBottom: 0,\n    },\n    \"blockquote cite\": {\n      ...adjustFontSizeTo(options.baseFontSize),\n      color: options.bodyColor,\n      fontWeight: options.bodyWeight,\n    },\n    \"blockquote cite:before\": {\n      content: '\"â€” \"',\n    },\n    [MOBILE_MEDIA_QUERY]: {\n      blockquote: {\n        marginLeft: rhythm(-3 / 4),\n        marginRight: 0,\n        borderLeft: `${rhythm(3 / 16)} solid`,\n        borderColor: \"#fcea0e\",\n        paddingLeft: rhythm(9 / 16),\n      },\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport Link from \"gatsby-link\"\nimport { Location } from '@reach/router'\n\nconst ROUTES = {\n  'posts': '/',\n  'projects': '/projects',\n  'tutorials': '/tutorials',\n  'about': '/about',\n}\n\nconst isActiveRoute = (route, active) =>\n  route === active || (active === '' && route === 'posts')\n\n// TODO(etnichols): render a bullet next to active route.\nconst Nav = props => {\n  return (\n    <Location>\n    {({location}) => {\n        let active = location.pathname.split(`/`)[1]\n        return Object.entries(ROUTES).map(([key, value]) => (<>\n        <Link className=\"link-style\" to={value}>{`${isActiveRoute(key, active) ? '>' : ''} ${key}`}</Link>\n        <br/>\n        </>))\n      }}\n    </Location>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport Nav from '../components/nav'\n\nimport './layout.scss'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n      return (\n        <>\n          <div className=\"container\">\n            <main>\n              <Link to=\"/\" css={{ display: `inline-block` }}>\n                <h1 className=\"site-title\">{title}</h1>\n              </Link>\n              <hr />\n              <Nav />\n              {children}\n            </main>\n            <footer>\n              <div style={{ color: styles.colors.text, textAlign: `center` }}>\n                {`Â© ${new Date().getFullYear()} ${title}`}\n              </div>\n            </footer>\n          </div>\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { formatDate } from '../utils/format'\nimport styles from '../styles'\n\nconst PostList = ({ posts }) => (\n  <ul style={{ marginLeft: 0, listStyle: `none`,}}>\n    {posts.map(post => {\n      const { node } = post\n      const { excerpt, fields, frontmatter } = node\n      return (\n        <li key={fields.slug}>\n          <span\n            style={{color: styles.colors.text}}\n            className=\"post-date\">\n            {formatDate(frontmatter.date)}\n          </span>\n          <Link to={fields.slug}>\n            {frontmatter.title}\n          </Link>\n        </li>\n      )\n    })}\n  </ul>\n)\n\nexport default PostList\n","/** Formats string in form YYYY-MM-DD. */\nconst formatDate = date => new Date(date).toISOString().split('T')[0]\n\nexports.formatDate = formatDate\n"],"sourceRoot":""}