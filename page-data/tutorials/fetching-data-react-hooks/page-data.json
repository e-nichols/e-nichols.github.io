{"componentChunkName":"component---src-templates-post-template-js","path":"/tutorials/fetching-data-react-hooks","webpackCompilationHash":"ab93ede7a7b3ae98f454","result":{"data":{"markdownRemark":{"html":"<p>I’m teaching an intro to React workshop on the <a href=\"https://cunystartups.com/hackathon19/\">CUNY hackathon</a> on Friday 10/18, and I’ve been working on some <a href=\"https://github.com/e-nichols/cuny-react-workshop\">demo code</a>, which includes a simple component showcasing data fetching with hooks.</p>\n<p><img src=\"/hooks-demo-181b28cb48b37c65554babbcff55da3c.gif\" alt=\"Demo of fetching data using React hooks\"></p>\n<p>Hooks came out in React v16.8 last February. Hooks let you use state and other React features without writing a class. Check out the React blog’s <a href=\"https://reactjs.org/docs/hooks-intro.html\">Introducing Hooks</a> post for more details.</p>\n<p><code class=\"language-text\">useState</code> allows you to add stateful variables to a function component, and <code class=\"language-text\">useEffect</code> combines the class-based <code class=\"language-text\">componentDidMount</code> and <code class=\"language-text\">componentDidUpdate</code> lifecycles into one: it executes code after initial render <em>and</em> every update (only if variables in its dependency array update, but more on that later). <code class=\"language-text\">useEffect</code> also plays nice with async functions - yay for data fetching!</p>\n<p>Here’s the demo code (only 50 lines!):</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber 0\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect<span class=\"token punctuation\">,</span> createRef <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./Fetch.css'</span>\n\n<span class=\"token comment\">/** Fetch random pictures of dogs. */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Fetch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isLoading<span class=\"token punctuation\">,</span> setIsLoading<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>requestsFulfilled<span class=\"token punctuation\">,</span> setRequestsFulfilled<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>requestsTotal<span class=\"token punctuation\">,</span> setRequestsTotal<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>url<span class=\"token punctuation\">,</span> setUrl<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchPicture</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://dog.ceo/api/breeds/image/random</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">json</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">fetchPicture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>requestsTotal<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"Container\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Fetching data <span class=\"token keyword\">with</span> Hooks<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>img\n        alt<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'A random dog'</span><span class=\"token punctuation\">}</span>\n        className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Image </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isLoading <span class=\"token operator\">?</span> <span class=\"token string\">'Hidden'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span>\n        onLoad<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n          <span class=\"token function\">setRequestsFulfilled</span><span class=\"token punctuation\">(</span>requestsFulfilled <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>button\n        className<span class=\"token operator\">=</span><span class=\"token string\">\"Button\"</span>\n        onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setRequestsTotal</span><span class=\"token punctuation\">(</span>requestsTotal <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n          <span class=\"token function\">setIsLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        Refresh picture\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Requests made<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>requestsTotal<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>Requests fulfilled<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>requestsFulfilled<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>And the CSS for reference</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">img {\n  height: 100%;\n}\n\n.Container {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  min-width: 600px;\n  min-height: 600px;\n}\n\n.Image {\n  height: 300px;\n  opacity: 1;\n  transition: visibility 0.2s linear,opacity 0.2s linear;\n}\n\n.Hidden {\n  display: hidden;\n  opacity: 0;\n}</code></pre></div>\n<p>Async data fetching in less than 50 lines! Fabulous!</p>\n<p>There are four state variables:</p>\n<ul>\n<li><code class=\"language-text\">url</code>: persists the result of the API call</li>\n<li><code class=\"language-text\">requestsTotal</code>: number of API calls made, incremented by pressing the button</li>\n<li><code class=\"language-text\">requestFulfilled</code>: number of API calls fulfilled</li>\n<li><code class=\"language-text\">isLoading</code>: whether there is currently a request in-flight</li>\n</ul>\n<p>The magic happens in the <code class=\"language-text\">useEffect</code> call. This function executes after initial render and if and only if the <code class=\"language-text\">requestsTotal</code> variable changes, since we pass it in as a dependency to the hook. More on passing a dependency array <a href=\"https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects\">here</a>.</p>\n<p>Our effect here <code class=\"language-text\">fetch</code>es a random dog photo URL, and sets the <code class=\"language-text\">url</code> state variable to it. That url is used as the <code class=\"language-text\">src</code> of the <code class=\"language-text\">img</code> line 25. The <code class=\"language-text\">onLoad</code> handler on line 28 updates the <code class=\"language-text\">requestFulfilled</code> and <code class=\"language-text\">isLoading</code> state.</p>\n<p>That’s it! Go fetch some data!</p>","timeToRead":2,"tableOfContents":"","fields":{"tagSlugs":["/tags/tutorial/","/tags/react-hooks/"]},"frontmatter":{"title":"Fetching data with React hooks","tags":["tutorial","React hooks"],"date":"2019-10-10T00:12:03.000Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tutorials/fetching-data-react-hooks"}}}