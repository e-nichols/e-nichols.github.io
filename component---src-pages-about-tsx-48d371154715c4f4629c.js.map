{"version":3,"sources":["webpack:///./src/data/resume.ts","webpack:///./src/pages/about.tsx","webpack:///./src/styles/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js"],"names":["data","sections","title","entries","company","duration","start","end","description","link","RenderResume","className","map","section","key","ResumeTitle","query","render","site","siteMetadata","email","github","linkedin","medium","iconsWithLinks","i","icon","href","name","RenderSection","entry","RenderEntry","header","body","Array","isArray","item","Page","baseHsl","colors","black","text","light","calm","smoke","whiteSmoke","white","linkHover","animations","animationCurveFastOutSlowIn","animationCurveLinearOutSlowIn","animationCurveFastOutLinearIn","animationCurveDefault","animationSpeedDefault","animationSpeedFast","animationSpeedSlow","container","style","maxWidth","margin","typography","Typography","baseFontSize","headerColor","bodyColor","baseLineHeight","bodyWeight","boldWeight","headerFontFamily","bodyFontFamily","googleFonts","styles","overrideStyles","options","adjustFontSizeTo","scale","rhythm","a","color","textDecoration","marginTop","blockquote","gray","paddingLeft","marginLeft","borderLeft","borderColor","marginBottom","fontWeight","content","MOBILE_MEDIA_QUERY","marginRight","ROUTES","Nav","props","active","location","pathname","split","Object","value","to","route","isActiveRoute","Layout","children","css","display","textAlign","Date","getFullYear"],"mappings":"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","file":"component---src-pages-about-tsx-48d371154715c4f4629c.js","sourcesContent":["import { Resume } from '../@types/resume.d.ts'\n\nconst data: Resume = {\n  sections: [\n    {\n      title: 'work',\n      entries: [\n        {\n          title: 'Software Engineer',\n          company: 'Google',\n          duration: {\n            start: 'September 2017',\n            end: 'Present',\n          },\n          description:\n            'Fullstack development work on Course Kit, a set of free tools that integrate with existing learning management systems (LMS) to help university professors create, collect and review coursework using Google Apps.',\n        },\n        {\n          title: 'Engineering Resident',\n          company: 'Google',\n          duration: {\n            start: 'July 2018',\n            end: 'July 2019',\n          },\n          description:\n            'Completed one-year new program for recent CS/CoE grads aimed at rapidly developing software at scale. Projects included design and implementation of an algorithm for detecting outdated content produced from an NLG system (C++) and and an asynchornous longform audio transcription system using the Google Speech API.',\n        },\n        {\n          title: 'RightSite',\n          link: 'https://apple.co/2Uu5tUT',\n          company: 'University of Kansas Medical Center',\n          duration: {\n            start: 'October 2016',\n            end: 'May 2017',\n          },\n          description:\n            'Developed a React Native iOS application which allows users to interact with 38 different interactive SVGs of the human body, with the goal of improving biopsy labeling accuracy in a laboratory setting.',\n        },\n        {\n          title: 'Well Query Dashboard',\n          company: 'Astra Analytics',\n          duration: {\n            start: 'September 2016',\n            end: 'February 2017',\n          },\n          description:\n            'Created a map-based web application for searching well records by location and 30 different drilling metrics using React, Redux, Node.js/Express and MySQL.',\n        },\n      ],\n    },\n    {\n      title: 'education',\n      entries: [\n        {\n          company: 'B.S., Computer Science',\n          title: 'University of Kansas',\n          duration: {\n            start: 'Aug 2012',\n            end: 'May 2017',\n          },\n        },\n      ],\n    },\n    {\n      title: 'languages/software',\n      entries: [\n        {\n          description: [\n            'Javascript (React, Redux, React Native, Node.js)',\n            'Typescript',\n            'Java',\n            'GraphQL (Gatsby, Prisma)',\n            'Google App Engine, AWS',\n            'HTML/CSS',\n            'InDesign, Photoshop, Sketch',\n          ],\n        },\n      ],\n    },\n    {\n      title: 'projects',\n      entries: [\n        {\n          title: 'overturemusical.com',\n          link: 'http://overturemusical.com',\n          duration: {\n            start: 'March 2019',\n            end: 'Present',\n          },\n          description:\n            'Marketing website for Overture - an original symphony about the Kansas City Philharmonic Orchestra during the 1953-1954 season.',\n        },\n        {\n          title: 'nycmaps.surge.sh',\n          link: 'https://nyc-maps.surge.sh',\n          duration: {\n            start: 'November 2017',\n            end: 'January 2018',\n          },\n          description:\n            \"Interactive maps of Manhattan's neighborhoods and the five boroughs. Created with Illustrator, React and D3. Note: Manhattan kind of looks like a hambone.\",\n        },\n        {\n          title: 'Digital Bookshelf',\n          link: 'https://github.com/e-nichols/digital-bookshelf',\n          duration: {\n            start: 'August 2018',\n            end: 'February 2019',\n          },\n          description:\n            \"A poor man's GoodReads clone using React Native, Prisma and Node.js.\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default data\n","import { graphql, StaticQuery } from 'gatsby'\nimport React, { FC } from 'react'\nimport Icon from '../components/icon'\nimport Layout from '../components/layout'\n\nimport { Duration, Entry, Resume, Section } from '../@types/resume.d.ts'\nimport data from '../data/resume'\nimport './about.scss'\n\nconst Page: FC<> = () => {\n  return (\n    <Layout>\n      <RenderResume {...data} />\n    </Layout>\n  )\n}\n\nconst RenderResume: FC<Resume> = ({ sections }) => {\n  return (\n    <>\n      <ResumeTitle />\n      <div className=\"resume-body\">\n        {sections.map(section => (\n          <RenderSection key={`section-${section.title}`} {...section} />\n        ))}\n      </div>\n    </>\n  )\n}\n\nconst ResumeTitle: FC<> = () => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              description\n              email\n              linkedin\n              github\n              medium\n            }\n          }\n        }\n      `}\n      render={data => {\n        const {\n          email,\n          github,\n          linkedin,\n          medium,\n          description,\n        } = data.site.siteMetadata\n        \n        const iconsWithLinks = [\n          ['email', `mailto:${email}`],\n          ['github', github],\n          ['linkedin', linkedin],\n          ['medium', medium],\n        ]\n\n        return (\n          <div>\n            <h1>about me</h1>\n            <p className=\"title-section-description\">\n              {description}\n            </p>\n            <div className=\"icon-section\">\n              {iconsWithLinks.map(([icon, href], i) => (\n                <a key={`link-${i}`} className=\"link-icon\" href={href}>\n                  <Icon key={`link-${i}`} name={icon} />\n                </a>\n              ))}\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\n/** Renders a section, a titled list of entries. */\nconst RenderSection: FC<Section> = ({ title, entries }) => {\n  return (\n    <section className=\"section\">\n      <div className=\"section-title-container\">\n        <h2 className=\"section-title\">{title}</h2>\n        <div className=\"section-bar\" />\n      </div>\n      {entries.map((entry, i) => (\n        <RenderEntry key={`${title}-entry-${i}`} {...entry} />\n      ))}\n    </section>\n  )\n}\n\n/** A single entry, either a job entry or a list of skills. */\nconst RenderEntry: FC<Entry> = ({\n  title,\n  link,\n  company,\n  duration,\n  description,\n}) => {\n  const header = (\n    <>\n      {title && (\n        <h4 className=\"entry-title\">\n          {link ? <a href={link}>{title}</a> : title}\n        </h4>\n      )}\n      {company && <h5 className=\"entry-company\">{company}</h5>}\n      {duration && (\n        <div className=\"entry-duration\">{`${duration.start} - ${\n          duration.end\n        }`}</div>\n      )}\n    </>\n  )\n\n  const body = Array.isArray(description) ? (\n    <ul className=\"languages\">\n      {description.map((item, i) => (\n        <li key={`languages-${item}-${i}`}>{item}</li>\n      ))}\n    </ul>\n  ) : (\n    description\n  )\n\n  return (\n    <div className=\"entry\">\n      {header}\n      <div className=\"entry-description\">{body}</div>\n    </div>\n  )\n}\n\nexport default Page\n","import { style } from \"glamor\"\n\nconst baseHsl = `291, 0%, 18%`\n\nconst colors = {\n  black: `hsla(${baseHsl},1)`,\n  text: `hsla(${baseHsl},0.95)`,\n  light: `hsla(${baseHsl},0.4)`,\n  calm: `hsla(${baseHsl},0.3)`,\n  smoke: `hsla(${baseHsl},0.2)`,\n  whiteSmoke: `hsla(${baseHsl},0.08)`,\n  white: `#fff`,\n  link: `#03a9f4`,\n  linkHover: `#ff5252`,\n}\n\n\nconst animations = {\n  animationCurveFastOutSlowIn: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationCurveLinearOutSlowIn: `cubic-bezier(0, 0, 0.2, 1)`,\n  animationCurveFastOutLinearIn: `cubic-bezier(0.4, 0, 1, 1)`,\n  animationCurveDefault: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationSpeedDefault: `250ms`,\n  animationSpeedFast: `200ms`,\n  animationSpeedSlow: `300ms`,\n}\n\nexport default {\n  animations: animations,\n  colors: colors,\n  container: style({\n    maxWidth: `37rem`,\n    margin: `0 auto`,\n  }),\n}\n","import Typography from 'typography'\nimport { MOBILE_MEDIA_QUERY } from \"typography-breakpoint-constants\"\nimport gray from \"gray-percentage\"\n\n// Fork of https://github.com/KyleAMathews/typography.js/tree/master/packages/typography-theme-st-annes\nconst typography = new Typography({\n  title: \"St. Evs\",\n  baseFontSize: \"16px\",\n  headerColor: \"hsla(0,0%,0%,1)\",\n  bodyColor: \"hsla(0,0%,0%,0.8)\",\n  baseLineHeight: 1.5625,\n  bodyWeight: 400,\n  boldWeight: 700,\n  headerFontFamily: ['Alegreya', \"serif\"],\n  bodyFontFamily: ['Alegreya Sans', \"sans-serif\"],\n  googleFonts: [\n    {\n      name: 'Alegreya',\n      styles: ['400','700',],\n    },\n    {\n      name: 'Alegreya Sans',\n      styles: ['400', '700',],\n    },\n  ],\n  overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n    a: {\n      color: \"#fb251b\",\n      textDecoration: \"none\",\n    },\n    \"a:hover,a:active\": {\n      color: options.bodyColor,\n    },\n    \"h1,h2,h3,h4,h5,h6\": {\n      marginTop: rhythm(2),\n    },\n    blockquote: {\n      ...scale(1 / 5),\n      color: gray(41),\n      paddingLeft: rhythm(18 / 16),\n      marginLeft: 0,\n      borderLeft: `${rhythm(6 / 16)} solid`,\n      borderColor: \"#fcea0e\",\n    },\n    \"blockquote > :last-child\": {\n      marginBottom: 0,\n    },\n    \"blockquote cite\": {\n      ...adjustFontSizeTo(options.baseFontSize),\n      color: options.bodyColor,\n      fontWeight: options.bodyWeight,\n    },\n    \"blockquote cite:before\": {\n      content: '\"— \"',\n    },\n    [MOBILE_MEDIA_QUERY]: {\n      blockquote: {\n        marginLeft: rhythm(-3 / 4),\n        marginRight: 0,\n        borderLeft: `${rhythm(3 / 16)} solid`,\n        borderColor: \"#fcea0e\",\n        paddingLeft: rhythm(9 / 16),\n      },\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport Link from \"gatsby-link\"\nimport { Location } from '@reach/router'\n\nconst ROUTES = {\n  'posts': '/',\n  'projects': '/projects',\n  'tutorials': '/tutorials',\n  'about': '/about',\n}\n\nconst isActiveRoute = (route, active) =>\n  route === active || (active === '' && route === 'posts')\n\n// TODO(etnichols): render a bullet next to active route.\nconst Nav = props => {\n  return (\n    <Location>\n    {({location}) => {\n        let active = location.pathname.split(`/`)[1]\n        return Object.entries(ROUTES).map(([key, value]) => (<>\n        <Link className=\"link-style\" to={value}>{`${isActiveRoute(key, active) ? '>' : ''} ${key}`}</Link>\n        <br/>\n        </>))\n      }}\n    </Location>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport Nav from '../components/nav'\n\nimport './layout.scss'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n      return (\n        <>\n          <div className=\"container\">\n            <main>\n              <Link to=\"/\" css={{ display: `inline-block` }}>\n                <h1 className=\"site-title\">{title}</h1>\n              </Link>\n              <hr />\n              <Nav />\n              {children}\n            </main>\n            <footer>\n              <div style={{ color: styles.colors.text, textAlign: `center` }}>\n                {`© ${new Date().getFullYear()} ${title}`}\n              </div>\n            </footer>\n          </div>\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}