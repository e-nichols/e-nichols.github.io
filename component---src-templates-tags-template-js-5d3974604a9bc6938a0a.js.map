{"version":3,"sources":["webpack:///./src/templates/tagsTemplate.js","webpack:///./src/styles/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/nav.js","webpack:///./src/components/Layout.js"],"names":["TagsTemplate","data","pageContext","allMarkdownRemark","edges","totalCount","links","map","node","to","fields","slug","frontmatter","title","tag","pageQuery","baseHsl","colors","black","text","light","calm","smoke","whiteSmoke","white","link","linkHover","animations","animationCurveFastOutSlowIn","animationCurveLinearOutSlowIn","animationCurveFastOutLinearIn","animationCurveDefault","animationSpeedDefault","animationSpeedFast","animationSpeedSlow","container","style","maxWidth","margin","typography","Typography","baseFontSize","headerColor","bodyColor","baseLineHeight","bodyWeight","boldWeight","headerFontFamily","bodyFontFamily","googleFonts","name","styles","overrideStyles","options","adjustFontSizeTo","scale","rhythm","a","color","textDecoration","marginTop","blockquote","gray","paddingLeft","marginLeft","borderLeft","borderColor","marginBottom","fontWeight","content","MOBILE_MEDIA_QUERY","marginRight","ROUTES","Nav","props","active","location","pathname","split","Object","entries","key","value","className","route","isActiveRoute","Layout","children","query","render","site","siteMetadata","css","display","fontSize","textAlign","Date","getFullYear"],"mappings":"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","file":"component---src-templates-tags-template-js-5d3974604a9bc6938a0a.js","sourcesContent":["\nimport React from 'react'\nimport Link from 'gatsby-link'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\n\nexport default function TagsTemplate({ data, pageContext }) {\n  const { edges, totalCount } = data.allMarkdownRemark\n  const links = edges.map(({ node }) => (\n    <li><Link to={node.fields.slug}>{node.frontmatter.title}</Link></li>\n  ))\n\n  return (\n    <Layout>\n      <h1>{`${totalCount} ${totalCount === 1 ? 'post' : 'posts'} tagged with \"${pageContext.tag}\"`}</h1>\n      <ul>{links}</ul>\n      <p><Link to=\"/tags/\">Browse all tags</Link></p>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import { style } from \"glamor\"\n\nconst baseHsl = `291, 0%, 18%`\n\nconst colors = {\n  black: `hsla(${baseHsl},1)`,\n  text: `hsla(${baseHsl},0.95)`,\n  light: `hsla(${baseHsl},0.4)`,\n  calm: `hsla(${baseHsl},0.3)`,\n  smoke: `hsla(${baseHsl},0.2)`,\n  whiteSmoke: `hsla(${baseHsl},0.08)`,\n  white: `#fff`,\n  link: `#03a9f4`,\n  linkHover: `#ff5252`,\n}\n\n\nconst animations = {\n  animationCurveFastOutSlowIn: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationCurveLinearOutSlowIn: `cubic-bezier(0, 0, 0.2, 1)`,\n  animationCurveFastOutLinearIn: `cubic-bezier(0.4, 0, 1, 1)`,\n  animationCurveDefault: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationSpeedDefault: `250ms`,\n  animationSpeedFast: `200ms`,\n  animationSpeedSlow: `300ms`,\n}\n\nexport default {\n  animations: animations,\n  colors: colors,\n  container: style({\n    maxWidth: `37rem`,\n    margin: `0 auto`,\n  }),\n}\n","import Typography from 'typography'\nimport { MOBILE_MEDIA_QUERY } from \"typography-breakpoint-constants\"\nimport gray from \"gray-percentage\"\n\n// Fork of https://github.com/KyleAMathews/typography.js/tree/master/packages/typography-theme-st-annes\nconst typography = new Typography({\n  title: \"St. Evs\",\n  baseFontSize: \"16px\",\n  headerColor: \"hsla(0,0%,0%,1)\",\n  bodyColor: \"hsla(0,0%,0%,0.8)\",\n  baseLineHeight: 1.5625,\n  bodyWeight: 400,\n  boldWeight: 700,\n  headerFontFamily: ['Alegreya', \"serif\"],\n  bodyFontFamily: ['Alegreya Sans', \"sans-serif\"],\n  googleFonts: [\n    {\n      name: 'Alegreya',\n      styles: ['400','700',],\n    },\n    {\n      name: 'Alegreya Sans',\n      styles: ['400', '700',],\n    },\n  ],\n  overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n    a: {\n      color: \"#fb251b\",\n      textDecoration: \"none\",\n    },\n    \"a:hover,a:active\": {\n      color: options.bodyColor,\n    },\n    \"h1,h2,h3,h4,h5,h6\": {\n      marginTop: rhythm(2),\n    },\n    blockquote: {\n      ...scale(1 / 5),\n      color: gray(41),\n      paddingLeft: rhythm(18 / 16),\n      marginLeft: 0,\n      borderLeft: `${rhythm(6 / 16)} solid`,\n      borderColor: \"#fcea0e\",\n    },\n    \"blockquote > :last-child\": {\n      marginBottom: 0,\n    },\n    \"blockquote cite\": {\n      ...adjustFontSizeTo(options.baseFontSize),\n      color: options.bodyColor,\n      fontWeight: options.bodyWeight,\n    },\n    \"blockquote cite:before\": {\n      content: '\"— \"',\n    },\n    [MOBILE_MEDIA_QUERY]: {\n      blockquote: {\n        marginLeft: rhythm(-3 / 4),\n        marginRight: 0,\n        borderLeft: `${rhythm(3 / 16)} solid`,\n        borderColor: \"#fcea0e\",\n        paddingLeft: rhythm(9 / 16),\n      },\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport Link from \"gatsby-link\"\nimport { Location } from '@reach/router'\n\nimport './nav.css'\n\nconst ROUTES = {\n  'posts': '/',\n  'projects': '/projects',\n  'tutorials': '/tutorials',\n  'about': '/about',\n}\n\nconst isActiveRoute = (route, active) =>\n  route === active || (active === '' && route === 'posts')\n\n// TODO(etnichols): render a bullet next to active route.\nconst Nav = props => {\n  return (\n    <Location>\n    {({location}) => {\n        let active = location.pathname.split(`/`)[1]\n        return Object.entries(ROUTES).map(([key, value]) => (<>\n        <Link className=\"link-style\" to={value}>{`${isActiveRoute(key, active) ? '>' : ''} ${key}`}</Link>\n        <br/>\n        </>))\n      }}\n    </Location>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport Nav from '../components/nav'\n\nimport './layout.scss'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n      return (\n        <>\n          <div className=\"container\">\n            <main>\n              <Link to=\"/\" css={{ display: `inline-block` }}>\n                <h1 className=\"site-title\">{title}</h1>\n              </Link>\n              <hr />\n              <Nav />\n              {children}\n            </main>\n            <footer>\n              <div\n                style={{\n                  fontSize: '18px',\n                  color: styles.colors.text,\n                  textAlign: `center`,\n                }}\n              >\n                {`© ${new Date().getFullYear()} ${title}`}\n              </div>\n            </footer>\n          </div>\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}