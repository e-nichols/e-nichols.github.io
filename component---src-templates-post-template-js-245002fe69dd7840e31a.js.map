{"version":3,"sources":["webpack:///./src/templates/postTemplate.js","webpack:///./src/styles/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/nav.js","webpack:///./src/components/Layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","PostTemplate","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_styles__WEBPACK_IMPORTED_MODULE_3__","_utils_typography__WEBPACK_IMPORTED_MODULE_4__","_ref","markdownRemark","data","frontmatter","html","tableOfContents","timeToRead","a","createElement","style","marginBottom","rhythm","color","shadow","title","marginTop","paddingTop","display","styles","colors","light","TagsSection","post","dangerouslySetInnerHTML","__html","className","_ref2","tags","fields","tagSlugs","tagsArray","map","tag","i","divider","length","key","to","fontStyle","textAlign","glamor__WEBPACK_IMPORTED_MODULE_0__","baseHsl","black","text","calm","smoke","whiteSmoke","white","link","linkHover","animations","animationCurveFastOutSlowIn","animationCurveLinearOutSlowIn","animationCurveFastOutLinearIn","animationCurveDefault","animationSpeedDefault","animationSpeedFast","animationSpeedSlow","container","maxWidth","margin","typography","Typography","baseFontSize","headerColor","bodyColor","baseLineHeight","bodyWeight","boldWeight","headerFontFamily","bodyFontFamily","googleFonts","name","overrideStyles","options","adjustFontSizeTo","scale","textDecoration","a:hover,a:active","h1,h2,h3,h4,h5,h6","blockquote","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","gray","paddingLeft","marginLeft","borderLeft","borderColor","blockquote > :last-child","blockquote cite","fontWeight","blockquote cite:before","content","MOBILE_MEDIA_QUERY","marginRight","ROUTES","posts","projects","tutorials","about","Nav","props","react__WEBPACK_IMPORTED_MODULE_5___default","_reach_router__WEBPACK_IMPORTED_MODULE_7__","active","location","pathname","split","Object","entries","value","Fragment","gatsby_link__WEBPACK_IMPORTED_MODULE_6___default","route","isActiveRoute","Layout","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","render","site","siteMetadata","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","css","_components_nav__WEBPACK_IMPORTED_MODULE_5__","Date","getFullYear","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired"],"mappings":"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","file":"component---src-templates-post-template-js-245002fe69dd7840e31a.js","sourcesContent":["\nimport React from 'react'\nimport Link from 'gatsby-link'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nexport default function PostTemplate({ data }) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html, tableOfContents, timeToRead } = markdownRemark\n    return (\n      <Layout>\n        <header>\n          <h1 style={{\n            marginBottom: rhythm(1/2),\n            color: frontmatter.shadow}}\n          >\n            {frontmatter.title}\n          </h1>\n          <hr style={{marginBottom: rhythm(1/2)}}/>\n          <p\n            style={{\n              marginTop: 0,\n              paddingTop: 0,\n              display: `block`,\n              color: `${styles.colors.light}`,\n            }}\n          >\n            {`${timeToRead} min read â€¢ `}\n            <TagsSection post={markdownRemark} />\n          </p>\n        </header>\n        <div\n          dangerouslySetInnerHTML={{ __html: tableOfContents }}\n          className=\"toc\"\n        />\n        <div dangerouslySetInnerHTML={{ __html: html }} className=\"post\" />\n      </Layout>\n    )\n}\n\nconst TagsSection = ({post}) => {\n  let tags\n  if (post.fields.tagSlugs) {\n    const tagsArray = post.fields.tagSlugs\n    tags = tagsArray.map((tag, i) => {\n      const divider = i < tagsArray.length - 1 && <span>{`, `}</span>\n      return (\n        <span key={tag}>\n          <Link to={tag}>{post.frontmatter.tags[i]}</Link>\n          {divider}\n        </span>\n      )\n    })\n  }\n\n  return (\n    <span style={{ fontStyle: `normal`, textAlign: `left`,}}>\n      tagged {tags}\n    </span>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      tableOfContents\n      fields {\n        tagSlugs\n      }\n      frontmatter {\n        title\n        tags\n        date\n      }\n    }\n  }\n`\n","import { style } from \"glamor\"\n\nconst baseHsl = `291, 0%, 18%`\n\nconst colors = {\n  black: `hsla(${baseHsl},1)`,\n  text: `hsla(${baseHsl},0.95)`,\n  light: `hsla(${baseHsl},0.4)`,\n  calm: `hsla(${baseHsl},0.3)`,\n  smoke: `hsla(${baseHsl},0.2)`,\n  whiteSmoke: `hsla(${baseHsl},0.08)`,\n  white: `#fff`,\n  link: `#03a9f4`,\n  linkHover: `#ff5252`,\n}\n\n\nconst animations = {\n  animationCurveFastOutSlowIn: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationCurveLinearOutSlowIn: `cubic-bezier(0, 0, 0.2, 1)`,\n  animationCurveFastOutLinearIn: `cubic-bezier(0.4, 0, 1, 1)`,\n  animationCurveDefault: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationSpeedDefault: `250ms`,\n  animationSpeedFast: `200ms`,\n  animationSpeedSlow: `300ms`,\n}\n\nexport default {\n  animations: animations,\n  colors: colors,\n  container: style({\n    maxWidth: `37rem`,\n    margin: `0 auto`,\n  }),\n}\n","import Typography from 'typography'\nimport { MOBILE_MEDIA_QUERY } from \"typography-breakpoint-constants\"\nimport gray from \"gray-percentage\"\n\n// Fork of https://github.com/KyleAMathews/typography.js/tree/master/packages/typography-theme-st-annes\nconst typography = new Typography({\n  title: \"St. Evs\",\n  baseFontSize: \"16px\",\n  headerColor: \"hsla(0,0%,0%,1)\",\n  bodyColor: \"hsla(0,0%,0%,0.8)\",\n  baseLineHeight: 1.5625,\n  bodyWeight: 400,\n  boldWeight: 700,\n  headerFontFamily: ['Alegreya', \"serif\"],\n  bodyFontFamily: ['Alegreya Sans', \"sans-serif\"],\n  googleFonts: [\n    {\n      name: 'Alegreya',\n      styles: ['400','700',],\n    },\n    {\n      name: 'Alegreya Sans',\n      styles: ['400', '700',],\n    },\n  ],\n  overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n    a: {\n      color: \"#fb251b\",\n      textDecoration: \"none\",\n    },\n    \"a:hover,a:active\": {\n      color: options.bodyColor,\n    },\n    \"h1,h2,h3,h4,h5,h6\": {\n      marginTop: rhythm(2),\n    },\n    blockquote: {\n      ...scale(1 / 5),\n      color: gray(41),\n      paddingLeft: rhythm(18 / 16),\n      marginLeft: 0,\n      borderLeft: `${rhythm(6 / 16)} solid`,\n      borderColor: \"#fcea0e\",\n    },\n    \"blockquote > :last-child\": {\n      marginBottom: 0,\n    },\n    \"blockquote cite\": {\n      ...adjustFontSizeTo(options.baseFontSize),\n      color: options.bodyColor,\n      fontWeight: options.bodyWeight,\n    },\n    \"blockquote cite:before\": {\n      content: '\"â€” \"',\n    },\n    [MOBILE_MEDIA_QUERY]: {\n      blockquote: {\n        marginLeft: rhythm(-3 / 4),\n        marginRight: 0,\n        borderLeft: `${rhythm(3 / 16)} solid`,\n        borderColor: \"#fcea0e\",\n        paddingLeft: rhythm(9 / 16),\n      },\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport Link from \"gatsby-link\"\nimport { Location } from '@reach/router'\n\nconst ROUTES = {\n  'posts': '/',\n  'projects': '/projects',\n  'tutorials': '/tutorials',\n  'about': '/about',\n}\n\nconst isActiveRoute = (route, active) =>\n  route === active || (active === '' && route === 'posts')\n\n// TODO(etnichols): render a bullet next to active route.\nconst Nav = props => {\n  return (\n    <Location>\n    {({location}) => {\n        let active = location.pathname.split(`/`)[1]\n        return Object.entries(ROUTES).map(([key, value]) => (<>\n        <Link className=\"link-style\" to={value}>{`${isActiveRoute(key, active) ? '>' : ''} ${key}`}</Link>\n        <br/>\n        </>))\n      }}\n    </Location>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport Nav from '../components/nav'\n\nimport './layout.scss'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n      return (\n        <>\n          <div className=\"container\">\n            <main>\n              <Link to=\"/\" css={{ display: `inline-block` }}>\n                <h1 className=\"site-title\">{title}</h1>\n              </Link>\n              <hr />\n              <Nav />\n              {children}\n            </main>\n            <footer>\n              <div style={{ color: styles.colors.text, textAlign: `center` }}>\n                {`Â© ${new Date().getFullYear()} ${title}`}\n              </div>\n            </footer>\n          </div>\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}