{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js","webpack:///./src/styles/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js"],"names":["SEO","description","lang","meta","keywords","title","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","NotFoundPage","baseHsl","colors","black","text","light","calm","smoke","whiteSmoke","white","link","linkHover","animations","animationCurveFastOutSlowIn","animationCurveLinearOutSlowIn","animationCurveFastOutLinearIn","animationCurveDefault","animationSpeedDefault","animationSpeedFast","animationSpeedSlow","container","style","maxWidth","margin","typography","Typography","baseFontSize","headerColor","bodyColor","baseLineHeight","bodyWeight","boldWeight","headerFontFamily","bodyFontFamily","googleFonts","styles","overrideStyles","options","adjustFontSizeTo","scale","rhythm","a","color","textDecoration","marginTop","blockquote","gray","paddingLeft","marginLeft","borderLeft","borderColor","marginBottom","fontWeight","MOBILE_MEDIA_QUERY","marginRight","ROUTES","Nav","props","active","location","pathname","split","Object","entries","map","key","value","className","to","route","isActiveRoute","Layout","children","query","render","data","css","display","textAlign","Date","getFullYear"],"mappings":"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","file":"component---src-pages-404-js-bbabc9a2f33337353817.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>Not Found </h1>\n    <p>This Ain't It, Chief</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import { style } from \"glamor\"\n\nconst baseHsl = `291, 0%, 18%`\n\nconst colors = {\n  black: `hsla(${baseHsl},1)`,\n  text: `hsla(${baseHsl},0.95)`,\n  light: `hsla(${baseHsl},0.4)`,\n  calm: `hsla(${baseHsl},0.3)`,\n  smoke: `hsla(${baseHsl},0.2)`,\n  whiteSmoke: `hsla(${baseHsl},0.08)`,\n  white: `#fff`,\n  link: `#03a9f4`,\n  linkHover: `#ff5252`,\n}\n\n\nconst animations = {\n  animationCurveFastOutSlowIn: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationCurveLinearOutSlowIn: `cubic-bezier(0, 0, 0.2, 1)`,\n  animationCurveFastOutLinearIn: `cubic-bezier(0.4, 0, 1, 1)`,\n  animationCurveDefault: `cubic-bezier(0.4, 0, 0.2, 1)`,\n  animationSpeedDefault: `250ms`,\n  animationSpeedFast: `200ms`,\n  animationSpeedSlow: `300ms`,\n}\n\nexport default {\n  animations: animations,\n  colors: colors,\n  container: style({\n    maxWidth: `37rem`,\n    margin: `0 auto`,\n  }),\n}\n","import Typography from 'typography'\nimport { MOBILE_MEDIA_QUERY } from \"typography-breakpoint-constants\"\nimport gray from \"gray-percentage\"\n\n// Fork of https://github.com/KyleAMathews/typography.js/tree/master/packages/typography-theme-st-annes\nconst typography = new Typography({\n  title: \"St. Evs\",\n  baseFontSize: \"16px\",\n  headerColor: \"hsla(0,0%,0%,1)\",\n  bodyColor: \"hsla(0,0%,0%,0.8)\",\n  baseLineHeight: 1.5625,\n  bodyWeight: 400,\n  boldWeight: 700,\n  headerFontFamily: ['Alegreya', \"serif\"],\n  bodyFontFamily: ['Alegreya Sans', \"sans-serif\"],\n  googleFonts: [\n    {\n      name: 'Alegreya',\n      styles: ['400','700',],\n    },\n    {\n      name: 'Alegreya Sans',\n      styles: ['400', '700',],\n    },\n  ],\n  overrideStyles: ({ adjustFontSizeTo, scale, rhythm }, options) => ({\n    a: {\n      color: \"#fb251b\",\n      textDecoration: \"none\",\n    },\n    \"a:hover,a:active\": {\n      color: options.bodyColor,\n    },\n    \"h1,h2,h3,h4,h5,h6\": {\n      marginTop: rhythm(2),\n    },\n    blockquote: {\n      ...scale(1 / 5),\n      color: gray(41),\n      paddingLeft: rhythm(18 / 16),\n      marginLeft: 0,\n      borderLeft: `${rhythm(6 / 16)} solid`,\n      borderColor: \"#fcea0e\",\n    },\n    \"blockquote > :last-child\": {\n      marginBottom: 0,\n    },\n    \"blockquote cite\": {\n      ...adjustFontSizeTo(options.baseFontSize),\n      color: options.bodyColor,\n      fontWeight: options.bodyWeight,\n    },\n    \"blockquote cite:before\": {\n      content: '\"â€” \"',\n    },\n    [MOBILE_MEDIA_QUERY]: {\n      blockquote: {\n        marginLeft: rhythm(-3 / 4),\n        marginRight: 0,\n        borderLeft: `${rhythm(3 / 16)} solid`,\n        borderColor: \"#fcea0e\",\n        paddingLeft: rhythm(9 / 16),\n      },\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from 'react'\nimport Link from \"gatsby-link\"\nimport { Location } from '@reach/router'\n\nconst ROUTES = {\n  'posts': '/',\n  'projects': '/projects',\n  'tutorials': '/tutorials',\n  'about': '/about',\n}\n\nconst isActiveRoute = (route, active) =>\n  route === active || (active === '' && route === 'posts')\n\n// TODO(etnichols): render a bullet next to active route.\nconst Nav = props => {\n  return (\n    <Location>\n    {({location}) => {\n        let active = location.pathname.split(`/`)[1]\n        return Object.entries(ROUTES).map(([key, value]) => (<>\n        <Link className=\"link-style\" to={value}>{`${isActiveRoute(key, active) ? '>' : ''} ${key}`}</Link>\n        <br/>\n        </>))\n      }}\n    </Location>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport Nav from '../components/nav'\n\nimport './layout.scss'\nimport styles from '../styles'\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { title } = data.site.siteMetadata\n      return (\n        <>\n          <div className=\"container\">\n            <main>\n              <Link to=\"/\" css={{ display: `inline-block` }}>\n                <h1 className=\"site-title\">{title}</h1>\n              </Link>\n              <hr />\n              <Nav />\n              {children}\n            </main>\n            <footer>\n              <div style={{ color: styles.colors.text, textAlign: `center` }}>\n                {`Â© ${new Date().getFullYear()} ${title}`}\n              </div>\n            </footer>\n          </div>\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}